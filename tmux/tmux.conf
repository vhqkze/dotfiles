# 查看某项设置的值
# tmux display -p '#{status-right}'


# =================================== basic ===================================

set-option -s default-terminal "xterm-256color"
set-option -sa terminal-overrides ",xterm-256color:Tc"
set-option -s escape-time 10
set-option -s focus-events on
set-option -s set-clipboard on
set-option -g allow-passthrough on

set-option -g base-index 1
set-option -g display-panes-time 3000
set-option -g display-time 1000
set-option -g history-limit 10000
set-option -g mouse on
set-option -g renumber-windows on     # 关掉某个窗口后，编号重排
set-option -g set-titles on           # 自动更改窗口title
set-option -g set-titles-string "#T"  # 设置窗口title格式
set-option -g status-keys vi

set-option -wg aggressive-resize on
set-option -wg automatic-rename off
set-option -wg clock-mode-style 24
set-option -wg mode-keys vi
set-option -wg pane-base-index 1
set-option -wg pane-border-indicators colour
set-option -wg pane-border-lines single
set-option -wg pane-border-status off

set-option -g allow-rename on
set-option -g cursor-style blinking-bar

bind-key r source-file ~/.config/tmux/tmux.conf \; display "Config Reloaded."
bind-key b set-option status  # toggle status line
bind-key -T copy-mode-vi WheelUpPane send-keys -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X scroll-down

bind-key c new-window -c "#{pane_current_path}"  # 新开窗口时保持当前路径

# =================================== pane ===================================

# # decide whether we're in a Vim process
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

# bind-key -n ^h select-pane -L  # 绑定Ctrl+h为往左移动
# bind-key -n ^l select-pane -R  # 绑定Ctrl+l为往右移动
# bind-key -n ^j select-pane -D  # 绑定Ctrl+j为往下移动
# bind-key -n ^k select-pane -U  # 绑定Ctrl+k为往上移动

# # 绑定hjkl键为面板切换的上下左右键
# bind -r k select-pane -U  # 绑定k为↑
# bind -r j select-pane -D  # 绑定j为↓
# bind -r h select-pane -L  # 绑定h为←
# bind -r l select-pane -R  # 绑定l为→

# 绑定Ctrl+hjkl键为面板上下左右调整边缘的快捷指令
bind -r ^k resizep -U 1  # 绑定 Ctrl+k 为往 ↑ 调整面板边缘10个单元格
bind -r ^j resizep -D 1  # 绑定 Ctrl+j 为往 ↓ 调整面板边缘10个单元格
bind -r ^h resizep -L 1  # 绑定 Ctrl+h 为往 ← 调整面板边缘10个单元格
bind -r ^l resizep -R 1  # 绑定 Ctrl+l 为往 → 调整面板边缘10个单元格

bind '%' split-window -h -c "#{pane_current_path}" # 新开面板时保持当前路径
bind '|' split-window -h -c "#{pane_current_path}" # 新开面板时保持当前路径
bind '"' split-window -c "#{pane_current_path}"    # 新开面板时保持当前路径
bind '-' split-window -c "#{pane_current_path}"    # 新开面板时保持当前路径

# =================================== other ===================================

bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'S-left' select-pane -L
bind-key -n 'S-down' select-pane -D
bind-key -n 'S-up' select-pane -U
bind-key -n 'S-right' select-pane -R

bind-key -T copy-mode-vi 'S-left' select-pane -L
bind-key -T copy-mode-vi 'S-down' select-pane -D
bind-key -T copy-mode-vi 'S-up' select-pane -U
bind-key -T copy-mode-vi 'S-right' select-pane -R
# =================================== style ===================================

# [palettes.catppuccin_macchiato]
thm_rosewater="#f4dbd6"
thm_flamingo="#f0c6c6"
thm_pink="#f5bde6"
thm_mauve="#c6a0f6"
thm_red="#ed8796"
thm_maroon="#ee99a0"
thm_peach="#f5a97f"
thm_yellow="#eed49f"
thm_green="#a6da95"
thm_teal="#8bd5ca"
thm_sky="#91d7e3"
thm_sapphire="#7dc4e4"
thm_blue="#8aadf4"
thm_lavender="#b7bdf8"
thm_text="#cad3f5"
thm_subtext1="#b8c0e0"
thm_subtext0="#a5adcb"
thm_overlay2="#939ab7"
thm_overlay1="#8087a2"
thm_overlay0="#6e738d"
thm_surface2="#5b6078"
thm_surface1="#494d64"
thm_surface0="#363a4f"
thm_base="#24273a"
thm_mantle="#1e2030"
thm_crust="#181926"


set -g status-style "bg=$thm_crust,fg=$thm_text"
set -g status-left "#[fg=$thm_crust,bg=$thm_blue] #S #[fg=$thm_blue,bg=$thm_crust]"
set -g status-right "#{prefix_highlight}#[fg=$thm_surface0,bg=$thm_crust]#[fg=$thm_text,bg=$thm_surface0] %Y-%m-%d #[fg=$thm_text,bg=$thm_surface0]#[fg=$thm_text,bg=$thm_surface0] %H:%M:%S #[fg=$thm_blue,bg=$thm_surface0]#[fg=$thm_crust,bg=$thm_blue] #h "

setw -g window-status-format "#[fg=$thm_crust,bg=$thm_surface0] #[fg=$thm_text,bg=$thm_surface0]#I #W#F #[fg=$thm_surface0,bg=$thm_crust]"
setw -g window-status-current-format "#[fg=$thm_crust,bg=$thm_blue] #[fg=$thm_crust,bg=$thm_blue]#I #W#F #[fg=$thm_blue,bg=$thm_crust]"
setw -g window-status-separator ""

set -ag message-style "fg=$thm_green,bg=$thm_crust"
set -g pane-active-border-style "fg=$thm_blue"
set -g display-panes-colour "$thm_text"

set -g clock-mode-colour $thm_blue


set -g status-right-length 80
set -g status-interval 1


# ============================= plugins =====================================

# git clone https://github.com/tmux-plugins/tpm ~/.local/share/tmux/plugins/tpm
# 设置tpm安卓的插件位置
set-environment -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.local/share/tmux/plugins/"

set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-dir "$HOME/.local/share/tmux/resurrect"
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'   # Automatically restored when tmux is started
set -g @continuum-save-interval '5'

set -g @plugin 'ChanderG/tmux-notify'
set -g @tnotify-verbose 'on'

# set -g @plugin 'aserowy/tmux.nvim'
# # navigation
# set -g @tmux-nvim-navigation true
# set -g @tmux-nvim-navigation-cycle true
# set -g @tmux-nvim-navigation-keybinding-left 'C-h' 
# set -g @tmux-nvim-navigation-keybinding-down 'C-j' 
# set -g @tmux-nvim-navigation-keybinding-up 'C-k' 
# set -g @tmux-nvim-navigation-keybinding-right 'C-l' 
# # resize
# set -g @tmux-nvim-resize false

if "test ! -d $HOME/.local/share/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.local/share/tmux/plugins/tpm && ~/.local/share/tmux/plugins/tpm/bin/install_plugins'"
run '~/.local/share/tmux/plugins/tpm/tpm'
