#!/usr/bin/env zsh
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

yabai -m config debug_output on

yabai -m config external_bar all:35:0

# tiling
yabai -m config layout bsp \
    top_padding 10 \
    bottom_padding 10 \
    left_padding 10 \
    right_padding 10 \
    window_gap 10

yabai -m config \
    focus_follows_mouse off \
    window_origin_display default \
    window_zoom_persist on \
    window_shadow on \
    window_opacity on \
    window_opacity_duration 0.0 \
    window_animation_duration 0.1 \
    normal_window_opacity 1.0 \
    active_window_opacity 1.0 \
    split_type auto \
    auto_balance off \
    mouse_modifier ctrl \
    mouse_action1 move \
    mouse_action2 resize

yabai -m config --space 7 layout float

# manage off
manage_off_apps="^(OrbStack|预览|系统信息|Raycast|Bezel|活动监视器|Barcode|IINA"
manage_off_apps="${manage_off_apps}|访达|Omi录屏专家|iStat Menus Status|QuickTime Player|scrcpy)$"
yabai -m rule --add app="${manage_off_apps}" manage=off
yabai -m rule --add app="^Arc$" title="^(vhqkze|General|Shortcuts|Links|Advanced)$" manage=off
yabai -m rule --add title="打开" manage=off

# layer above, or sticky
layer_above_apps='^(通知中心|Barcode|Snipaste|scrcpy)$'
yabai -m rule --add app="${layer_above_apps}" layer=above
yabai -m rule --add app="Omi录屏专家" title="文件列表" layer=above sticky=on
yabai -m rule --add app="Omi录屏专家" title="已选择1个窗口" layer=above
yabai -m rule --add app="Omi录屏专家" title="已选择1个App" layer=above
yabai -m rule --add app="QuickTime Player" sticky=on
yabai -m rule --add app="Hammerspoon" subrole="AXDialog" layer=above sticky=on

# other
yabai -m rule --add app="PyCharm" manage=off space=7

function record_window {
    YABAI_DB="$HOME/.config/yabai/yabai.db"
    window_info=$(yabai -m query --windows --window $YABAI_WINDOW_ID)
    display_id=$(echo "$window_info" | jq -r '.display')
    space_id=$(echo "$window_info" | jq -r '.space')
    app_name=$(echo "$window_info" | jq -r '.app')
    # title=$(echo "$window_info" | jq  '.title')
    role=$(echo "$window_info" | jq -r '.role')
    subrole=$(echo "$window_info" | jq -r '.subrole')
    frame=$(echo $window_info | jq '[.frame.x,.frame.y,.frame.w,.frame.h | nearbyint] | join(" ")')
    read frame_x frame_y frame_w frame_h <<<$(echo "$window_info" | jq -r '[.frame.x,.frame.y,.frame.w,.frame.h | nearbyint] | join(" ")')
    [[ "$(echo "$window_info" | jq -r .layer)" == "below" ]] && yabai -m window $YABAI_WINDOW_ID --layer normal
    # todo: 修改数据库layer
    [[ "$subrole" == "AXDialog" ]] && exit
    [[ "$app_name" == "Hammerspoon" && "$subrole" == "AXUnknown.Hammerspoon" ]] && exit
    [[ "$app_name" == "iStat Menus Status" ]] && exit

    values="$(echo $window_info | jq -r '[.id,.pid,.app,.title|tojson]|join(",")' | perl -pe 's/\\"/""/g')"
    values="$values,$frame,$(echo $window_info | jq -r '[.role,.subrole,.display,.space,.level,.layer,.opacity,."split-type",."split-child",."stack-index",."can-move",."can-resize",."has-focus",."has-shadow",."has-parent-zoom",."has-fullscreen-zoom",."is-native-fullscreen",."is-visible",."is-minimized",."is-hidden",."is-floating",."is-sticky",."is-grabbed"|tojson]|join(",")')"
    values="$values,$(date +%s),$(date +%s),0"
    sqlite3 "$YABAI_DB" "INSERT INTO windows (
        id,
        pid,
        app,
        title,
        frame,
        role,
        subrole,
        display,
        space,
        level,
        layer,
        opacity,
        split_type,
        split_child,
        stack_index,
        can_move,
        can_resize,
        has_focus,
        has_shadow,
        has_parent_zoom,
        has_fullscreen_zoom,
        is_native_fullscreen,
        is_visible,
        is_minimized,
        is_hidden,
        is_floating,
        is_sticky,
        is_grabbed,
        create_time,
        focus_time,
        is_destroyed
        ) VALUES ($values)"
}

function create_window {
    window_info=$(yabai -m query --windows --window $YABAI_WINDOW_ID)
    # display_id=$(echo "$window_info" | jq -r '.display')
    # space_id=$(echo "$window_info" | jq -r '.space')
    app_name=$(echo "$window_info" | jq -r '.app')
    title=$(echo "$window_info" | jq -r '.title')
    role=$(echo "$window_info" | jq -r '.role')
    subrole=$(echo "$window_info" | jq -r '.subrole')
    read frame_x frame_y frame_w frame_h <<<$(echo "$window_info" | jq -r '[.frame.x,.frame.y,.frame.w,.frame.h | nearbyint] | join(" ")')
    is_floating=$(echo "$window_info" | jq -r '."is-floating"')
    can_resize=$(echo "$window_info" | jq -r '."can-resize"')
    (($frame_w < 50 && $frame_h < 50)) && [[ "$subrole" == "AXDialog" ]] && exit
    [[ "$app_name" == "Snipaste" && "$subrole" == "AXDialog" ]] && exit
    [[ "$app_name" == "Xnip Helper" ]] && exit
    [[ "$role" != "AXWindow" ]] && exit
    [[ "$app_name" == "Hammerspoon" && "$subrole" == "AXUnknown.Hammerspoon" ]] && exit
    [[ "$app_name" == "Hammerspoon" && "$title" == "Chooser" ]] && exit
    [[ "$app_name" == "Omi录屏专家" && "$title" == "" ]] && exit
    [[ "$app_name" == "Omi录屏专家" && "$subrole" == "AXDialog" ]] && exit
    [[ "$app_name" == "Omi录屏专家" && "$title" == "文件列表" ]] && yabai -m window $YABAI_WINDOW_ID --move abs:10:45 && exit
    [[ "$subrole" == "AXDialog" ]] && ((frame_w < 70 && frame_h < 70)) && exit
    [[ "$app_name" == "IINA" ]] && exit
    [[ "$app_name" == "scrcpy" ]] && exit
    if [[ "$is_floating" == false && "$can_resize" == false ]]; then
        yabai -m window $YABAI_WINDOW_ID --toggle float
        "$HOME/.config/yabai/center_window.sh" $YABAI_WINDOW_ID
    fi
    if [[ "$is_floating" == true ]]; then
        "$HOME/.config/yabai/center_window.sh" $YABAI_WINDOW_ID
    fi
}

function destroy_window {
    YABAI_DB="$HOME/.config/yabai/yabai.db"
    window_info=$(sqlite3 --json "$YABAI_DB" "SELECT * FROM windows WHERE id=$YABAI_WINDOW_ID ORDER BY focus_time DESC LIMIT 1")
    app_name=$(echo "$window_info" | jq -r '.[]|.app')
    title=$(echo "$window_info" | jq -r '.[]|.title')
    if [[ "$window_info" != "" ]]; then
        display_id=$(echo "$window_info" | jq -r '.[]|.display')
        space_id=$(echo "$window_info" | jq -r '.[]|.space')
        sqlite3 "$YABAI_DB" "update windows set is_destroyed=1 WHERE id=$YABAI_WINDOW_ID"
        [[ "$app_name" == "Knock" && "$title" == "Knock" ]] && exit
        recent_window=$(sqlite3 "$YABAI_DB" "SELECT id FROM windows where display=$display_id and space=$space_id and is_minimized=0 and is_destroyed=0 and id!=$YABAI_WINDOW_ID ORDER BY focus_time DESC LIMIT 1")
        current_space=$(yabai -m query --spaces --space | jq .index)
        if [[ "$recent_window" != "" && "$current_space" == "$space_id" ]]; then
            yabai -m window --focus $recent_window
        fi
    fi
}

function minimize_window {
    YABAI_DB="$HOME/.config/yabai/yabai.db"
    window_info=$(sqlite3 --json "$YABAI_DB" "SELECT * FROM windows WHERE id=$YABAI_WINDOW_ID ORDER BY focus_time DESC LIMIT 1")
    app_name=$(echo "$window_info" | jq -r '.[]|.app')
    title=$(echo "$window_info" | jq -r '.[]|.title')
    if [[ "$window_info" != "" ]]; then
        display_id=$(echo "$window_info" | jq -r '.[]|.display')
        space_id=$(echo "$window_info" | jq -r '.[]|.space')
        sqlite3 "$YABAI_DB" "UPDATE windows SET is_minimized=1 WHERE id=$YABAI_WINDOW_ID"
        recent_window=$(sqlite3 "$YABAI_DB" "SELECT id FROM windows where display=$display_id and space=$space_id and is_minimized=0 and is_destroyed=0 and id!=$YABAI_WINDOW_ID ORDER BY focus_time DESC LIMIT 1")
        current_space=$(yabai -m query --spaces --space | jq .index)
        if [[ "$recent_window" != "" && "$current_space" == "$space_id" ]]; then
            yabai -m window --focus $recent_window
        fi
    fi
}

function move_notification {
    yabai -m window $YABAI_WINDOW_ID --move rel:0:30
}

function quit_app {
    YABAI_DB="$HOME/.config/yabai/yabai.db"
    window_info=$(sqlite3 --json "$YABAI_DB" "SELECT * FROM windows WHERE id=$YABAI_WINDOW_ID ORDER BY focus_time DESC LIMIT 1")
    app_name=$(echo "$window_info" | jq -r '.[]|.app')
    title=$(echo "$window_info" | jq -r '.[]|.title')
    if [[ "$window_info" != "" ]]; then
        display_id=$(echo "$window_info" | jq -r '.[]|.display')
        space_id=$(echo "$window_info" | jq -r '.[]|.space')
        pid=$(echo "$window_info" | jq -r '.[]|.pid')
        app_name=$(echo "$window_info" | jq -r '.[]|.app')
        title=$(echo "$window_info" | jq -r '.[]|.title')
        windows=$(yabai -m query --windows | jq ".[]|select(.pid==$pid)")
        [[ -z "$windows" ]] && kill -15 $pid
    fi

}

app_ignore='^(通知中心|控制中心|PasteNow|iStat Menus Status)$'
yabai -m signal --add event=window_created action="${functions[create_window]}" app!="$app_ignore"
yabai -m signal --add event=window_created action="${functions[record_window]}" app!="$app_ignore"
yabai -m signal --add event=window_focused action="${functions[record_window]}" app!="$app_ignore"
yabai -m signal --add event=window_moved action="${functions[record_window]}" app!="$app_ignore"
yabai -m signal --add event=window_resized action="${functions[record_window]}" app!="$app_ignore"
yabai -m signal --add event=window_deminimized action="${functions[record_window]}" app!="$app_ignore"
yabai -m signal --add event=window_destroyed action="${functions[destroy_window]}" app!="$app_ignore"
yabai -m signal --add event=window_minimized action="${functions[minimize_window]}" app!="$app_ignore"

yabai -m signal --add event=window_focused action="sketchybar --trigger window_focused"
yabai -m signal --add event=window_resized action="sketchybar --trigger window_resized"
yabai -m signal --add event=window_created action="${functions[move_notification]}" app="通知中心"

app_quit_ignore="^(通知中心|控制中心|PasteNow|iStat Menus Status|Raycast|聚焦|访达|Snipaste|Shottr"
app_quit_ignore="${app_quit_ignore}|Omi录屏专家|Espanso|Arc|KeyCastr|Espanso"
app_quit_ignore="$app_quit_ignore|OrbStack|LuLu|Xnip|Hammerspoon|Spotify)$"
app_quit="^(活动监视器|脚本编辑器|快捷指令|预览|App Store|Code|Font Book|IINA|Numbers 表格"
app_quit="${app_quit}|Obsidian|Omi录屏专家|PyCharm|QuickTime Player|scrcpy|SF Symbols beta|Spacedrive|TablePlus"
app_quit="${app_quit}|文本编辑)$"
yabai -m signal --add event=window_destroyed action="${functions[quit_app]}" app!="$app_quit_ignore"
yabai -m signal --add event=window_created app="scrcpy" action='yabai -m window $YABAI_WINDOW_ID --move abs:1300:45 && yabai -m window $YABAI_WINDOW_ID --resize abs:586:1145'

# vim:ft=bash:
